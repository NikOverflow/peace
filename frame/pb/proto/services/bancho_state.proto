syntax = "proto3";

package peace.services.bancho.state;

service BanchoStateRPC {
  rpc BroadcastBanchoPackets(BroadcastBanchoPacketsRequest)
      returns (ExecSuccess);

  rpc EnqueueBanchoPackets(EnqueueBanchoPacketsRequest) returns (ExecSuccess);
  rpc BatchEnqueueBanchoPackets(BatchEnqueueBanchoPacketsRequest)
      returns (ExecSuccess);

  rpc DequeueBanchoPackets(DequeueBanchoPacketsRequest) returns (BanchoPackets);
  rpc BatchDequeueBanchoPackets(BatchDequeueBanchoPacketsRequest)
      returns (ExecSuccess);

  rpc CreateUserSession(CreateUserSessionRequest)
      returns (CreateUserSessionResponse);
  rpc DeleteUserSession(RawUserQuery) returns (ExecSuccess);
  rpc IsUserSessionExists(RawUserQuery) returns (IsUserSessionExistsResponse);

  rpc ShowAllSessions(ShowAllSessionsRequest) returns (ShowAllSessionsResponse);
}

message ExecSuccess {}

message BroadcastBanchoPacketsRequest { bytes packets = 1; }

message RawUserQuery {
  enum QueryType {
    // Deserialize into `UserId(i32)`
    UserId = 0;
    // Deserialize into `Username(string)`
    Username = 1;
    // Deserialize into `UsernameUnicode(string)`
    UsernameUnicode = 2;
    // Deserialize into `SessionId(string)`
    SessionId = 3;
  }
  QueryType query_type = 1;
  optional int32 int_val = 2;
  optional string string_val = 3;
}

message RawBanchoPacketTarget {
  enum TargetType {
    // Deserialize into `UserId(i32)`
    UserId = 0;
    // Deserialize into `Username(string)`
    Username = 1;
    // Deserialize into `UsernameUnicode(string)`
    UsernameUnicode = 2;
    // Deserialize into `SessionId(string)`
    SessionId = 3;
    // Deserialize into `Channel(string)`
    Channel = 4;
  }
  TargetType target_type = 1;
  optional int32 int_val = 2;
  optional string string_val = 3;
}

message EnqueueBanchoPacketsRequest {
  RawBanchoPacketTarget target = 1;
  bytes packets = 2;
}

message BatchEnqueueBanchoPacketsRequest {
  repeated EnqueueBanchoPacketsRequest requests = 1;
}

message DequeueBanchoPacketsRequest {
  RawBanchoPacketTarget target = 1;
  bytes value = 2;
}

message BatchDequeueBanchoPacketsRequest {
  repeated DequeueBanchoPacketsRequest requests = 1;
}

message BanchoPackets { bytes packets = 1; }

message CreateUserSessionRequest {
  int32 user_id = 1;
  string username = 2;
  optional string username_unicode = 3;
  int32 privileges = 4;
  int32 bancho_privileges = 5;
  string region = 7;
  string ip = 8;
}

message CreateUserSessionResponse { string session_id = 1; }

message IsUserSessionExistsResponse { optional string session_id = 1; }

message ShowAllSessionsRequest {}

message ShowAllSessionsResponse {
  message UserData {
    string session_id = 1;
    int32 user_id = 2;
    string username = 3;
    optional string username_unicode = 4;
    int32 privileges = 5;
    int32 bancho_privileges = 6;
    string region = 7;
    string ip = 8;
  }
  uint64 len = 1;
  repeated UserData indexed_by_session_id = 2;
  repeated UserData indexed_by_user_id = 3;
  repeated UserData indexed_by_username = 4;
  repeated UserData indexed_by_username_unicode = 5;
}
